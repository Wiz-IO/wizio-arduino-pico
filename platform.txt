######################################################################################
#
#   WizIO 2021 Georgi Angelov
#
#       https://github.com/Wiz-IO/
#
#       the.wizarda@gmail.com
#
######################################################################################

name=WizIO
version=1.0.0

compiler.c.cmd=arm-none-eabi-gcc
compiler.cpp.cmd=arm-none-eabi-g++
compiler.c.elf.cmd=arm-none-eabi-g++
compiler.ar.cmd=arm-none-eabi-ar
compiler.objcopy.cmd=arm-none-eabi-objcopy
compiler.size.cmd=arm-none-eabi-size

###### Compile ######

compiler.include="-I{build.core.path}/arduino" "-I{build.core.path}/api" "-I{build.core.path}/sdk/include" "-I{build.core.path}/sdk/lib/tinyusb/src"

compiler.S.flags=-x assembler-with-cpp
compiler.c.flags=
compiler.gcc.c.flags=-Os -c -g -Wall -DARDUINO=200 -DARDUINO_ARCH_MBED -D{build.stdio} -DPICO_ON_DEVICE=1 -DCFG_TUSB_MCU=OPT_MCU_RP2040 -DCFG_TUSB_OS=OPT_OS_PICO -fdata-sections -ffunction-sections -Wno-sign-compare -Wno-unused-function
compiler.cpp.flags=-fno-exceptions -fno-non-call-exceptions -fno-rtti -fno-use-cxa-atexit
compiler.c.elf.flags=-nostartfiles "-T{build.core.path}/SDK/pico/pico_standard_link/{build.ldscript}" -specs=nano.specs -u _printf_float -u _scanf_float -Xlinker --gc-sections -Wl,--gc-sections
compiler.ar.flags=rcs
compiler.objcopy.remove.flags=--strip-debug
compiler.objcopy.bin.flags=-O binary

###### Compile S files
recipe.S.o.pattern="{build.compiler_path}/{compiler.c.cmd}" {build.mcu} {compiler.c.flags} {compiler.gcc.c.flags} {compiler.S.flags} {compiler.include} {includes} "{source_file}" -o "{object_file}"

###### C Compile files
recipe.c.o.pattern="{build.compiler_path}/{compiler.c.cmd}" {build.mcu} {compiler.c.flags} {compiler.gcc.c.flags} {compiler.include} {includes} "{source_file}" -o "{object_file}"

###### CPP Compile files
recipe.cpp.o.pattern="{build.compiler_path}/{compiler.cpp.cmd}" {build.mcu} {compiler.cpp.flags} {compiler.gcc.c.flags} {compiler.include} {includes} "{source_file}" -o "{object_file}"

###### AR Create archives
recipe.ar.pattern="{build.compiler_path}/{compiler.ar.cmd}" {compiler.ar.flags} "{archive_file_path}" "{object_file}"

###### ELF Combine gc-sections, archives, and objects
recipe.c.combine.pattern="{build.compiler_path}/{compiler.c.elf.cmd}" {build.mcu} {compiler.c.elf.flags} -o "{build.path}/{build.project_name}.elf" -Wl,--start-group "{build.path}/{archive_file}" {object_files} -Wl,--end-group -lm -lgcc --entry=_entry_point


###### Create image
recipe.objcopy.bin.1.pattern="{build.compiler_path}\{compiler.objcopy.cmd}" -O binary "{build.path}\{build.project_name}.elf" "{build.path}\{build.project_name}.bin"
recipe.objcopy.bin.2.pattern=cmd /C "{build.core.path}\uf2conv.py" "{build.path}\{build.project_name}.bin" -o "{build.path}\{build.project_name}.uf2" -f 0xe48bff56


###### Compute size
recipe.size.pattern="{build.compiler_path}/{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:/.iram0/.text|/.iram0/.vectors|/.dram0/.data|/.flash/.text|/.flash/.rodata|)/s+([0-9]+).*
recipe.size.regex.data=^(?:/.dram0/.data|/.dram0/.bss|/.noinit)/s+([0-9]+).*


###### Uploader ######

tools.msd.path=
tools.msd.cmd=
tools.msd.cmd.windows=
tools.msd.upload.params.verbose=-vvvvvv
tools.msd.upload.params.quiet=-q
tools.msd.upload.pattern=

